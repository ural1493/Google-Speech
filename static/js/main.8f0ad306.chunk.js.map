{"version":3,"sources":["core/constants/languages.ts","core/i18n/i18n.ts","core/constants/MainRouters.ts","core/firebase/index.ts","core/constants/mediaQueries.ts","core/components/AuthForm/AuthForm.tsx","core/redux/types/auth/login.ts","core/redux/actions/auth/login.ts","core/redux/types/auth/registration.ts","core/constants/Regexp.ts","pages/Login/validation.ts","core/components/Button/Button.tsx","core/components/TextField/TextField.tsx","core/components/AuthLink/styled/Link.tsx","core/styles/FlexCenter.ts","core/components/AuthLink/styled/FlexContainter.tsx","core/components/AuthLink/AuthLink.tsx","core/hooks/typedReduxHooks.ts","core/redux/selectors/user.ts","core/redux/actions/auth/registration.ts","core/redux/types/words/words.ts","core/components/AuthForm/AuthFormContainer.ts","core/components/AuthForm/AuthContainer.ts","core/components/Heading/Heading.tsx","core/components/AuthHeader/AuthHeader.tsx","core/components/AuthHeader/AuthHeaderInfo.ts","pages/Login/Login.tsx","pages/Registration/validation.ts","pages/Registration/Registration.tsx","pages/Start/components/StartHeader.tsx","pages/Start/components/StartText.tsx","assets/bg-google-speech.png","pages/Start/components/StartContainer.tsx","pages/Start/Start.tsx","pages/Main/components/ButtonContainer.tsx","pages/Main/components/MainContainer.tsx","core/redux/actions/words/words.ts","core/redux/types/auth/user.ts","assets/default.jpg","core/constants/urls.ts","pages/Main/components/MainImg.ts","pages/Main/components/ChosenImage.tsx","core/components/Word/WordContainer.tsx","core/components/Word/TextContainer.tsx","core/helpers/words.ts","core/components/Word/Word.tsx","core/styles/AbsoluteCenter.ts","pages/Main/components/ModalContainer.ts","pages/Main/components/ModalContent.ts","pages/Main/components/Results.tsx","core/constants/app.ts","core/redux/selectors/words.ts","pages/Main/components/WordsContainer.tsx","pages/Main/components/TranscriptContainer.tsx","pages/Main/components/Dropdown.tsx","pages/Main/components/MainHeader.ts","pages/Main/components/AccountContainer.ts","core/components/ComfirmModalContainer/ComfirmModalContainer.ts","pages/Main/components/Account.tsx","core/components/LanguageSelector/LanguageSelector.tsx","pages/Main/Main.tsx","core/hooks/useSpeech.ts","core/redux/actions/auth/user.ts","core/redux/types/statistics/statistics.tsx","core/theme/index.ts","core/components/RequireAuth/RequireAuth.tsx","core/redux/actions/statistics/statistics.ts","core/redux/selectors/statistics.ts","core/helpers/statistics.ts","pages/Statistics/components/StatisticsTableBody.tsx","core/constants/db.ts","pages/Statistics/components/Container.ts","pages/Statistics/components/StatisticsContainer.ts","pages/Statistics/Statistics.tsx","App.tsx","reportWebVitals.ts","core/styles/globalStyled.tsx","core/redux/sagas/authSaga.ts","core/redux/sagas/statisticsSaga.ts","core/api/index.ts","assets/success-sound.mp3","core/redux/sagas/wordsSaga.ts","core/redux/sagas/index.ts","core/redux/reducers/authReducer.ts","core/redux/reducers/statisticsReducer.ts","core/redux/reducers/wordsReducer.ts","core/redux/reducers/index.ts","core/redux/store.ts","index.tsx"],"names":["Languages","i18n","use","initReactI18next","init","resources","ru","translation","en","lng","fallbackLng","interpolation","escapeValue","MainRoutes","firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","MediaQueries","LoginActionTypes","AuthForm","styled","form","DesktopLarge","Laptop","RegistrationActionTypes","loginInit","createAction","LOGIN_INIT","values","payload","loginStart","LOGIN_START","loginSuccess","LOGIN_SUCCESS","user","loginFail","LOGIN_FAIL","error","regexp","regPasswordRules","regMailRules","validate","errors","test","email","t","password","Button","ButtonComponent","props","theme","palette","primary","main","mainDark","text","secondary","TextFiled","TextFieldComponent","Mobile","Link","LinkComponent","FlexCenter","css","FlexContainer","div","AuthLink","to","children","useTypedSelector","useSelector","selectUser","state","selectUserError","selectEmail","WordsActionTypes","registrationInit","REGISTRATION_INIT","registrationSuccess","REGISTRATION_START","REGISTRATION_SUCCESS","registrationFail","REGISTRATION_FAIL","clearError","CLEAR_ERROR","AuthFormContainer","Desktop","AuthContainer","Heading","Typography","boxShadowColor","heading","AuthHeader","useTranslation","align","variant","AuthHeaderInfo","Login","dispatch","useDispatch","formik","useFormik","initialValues","isInitialValid","onSubmit","Register","handleSubmit","required","helperText","label","id","onChange","handleChange","value","type","Alert","severity","onClose","disabled","isValid","isValidating","size","confirmPassword","Registration","onReset","handleReset","StartHeader","h2","header","StartText","p","StartContainer","bg","mainBackground","Start","Main","ButtonContainer","MainContainer","UserActionTypes","getWords","GET_WORDS","getWordsSuccess","GET_WORDS_SUCCESS","words","getWordsFail","GET_WORDS_FAIL","errorMessage","checkWord","CHECK_WORD","word","addWordToAnswered","ADD_WORD_TO_ANSWERED","setSkippedWords","SET_SKIPPED_WORDS","isSkipped","addToSkipped","ADD_TO_SKIPPED","removeFromSkipped","REMOVE_FROM_SKIPPED","setGroup","SET_GROUP","group","resetWords","RESET_WORDS","updateUserWords","UPDATE_USER_WORDS","url","MainImg","img","mainImg","ChosenImage","imageUrl","src","startImage","alt","WordContainer","border","wordContainer","isAnswered","backgroundLight","TextContainer","playAudio","audioComponent","Audio","play","compareWords","wordToCheck","toLowerCase","getLastWordFromString","split","pop","Word","transcription","audio","image","onImageChange","onSkipWord","onClick","FormControlLabel","control","Checkbox","event","AbsoluteCenter","ModalContainer","ModalContent","Results","isOpen","rightAnswers","Modal","open","filter","includes","map","groupCoefficients","selectWords","selectGroup","WordsContainer","Tablet","TranscriptContainer","Dropdown","MainHeader","AccountContainer","Account","useState","isModalOpen","setIsModalOpen","handleCloseModal","signOut","LanguageSelector","currentLanguage","language","languages","Object","keys","services","resourceStore","data","Select","target","changeLanguage","MenuItem","getFixedT","chosenImg","setChosenImg","navigate","useNavigate","useSpeechRecognition","transcript","listening","resetTranscript","answeredWords","skippedWords","isLoading","resultsIsOpen","setResultsIsOpen","handleStopListening","useCallback","SpeechRecognition","stopListening","useEffect","length","handleStartListening","startListening","continuous","handleClose","handleSkipWord","checked","handleChangeCategory","Number","useSpeech","defaultValue","coefficient","index","color","fontSize","CircularProgress","Statistics","StatisticsActionTypes","setUser","SET_USER","RequireAuth","redirectTo","forAuth","getUsersStatistics","GET_USERS_STATISTICS","getUsersStatisticsSuccess","GET_USERS_STATISTICS_SUCCESS","users","getUsersStatisticsFail","GET_USERS_STATISTICS_FAIL","selectUsersStatistics","statistics","formatDateFromTimestamp","timestamp","date","toDate","formatedDate","toLocaleDateString","replaceAll","formatedTime","toLocaleTimeString","descSorting","a","b","orderBy","sortUserData","order","DbCollections","StatisticsTableBody","usersStatistics","TableBody","slice","sort","TableRow","TableCell","score","Container","Paper","StatisticsContainer","setOrder","setOrderBy","headerCells","sortableHeaderCells","TableContainer","component","Table","stickyHeader","TableHead","property","sortDirection","TableSortLabel","active","direction","App","unsubscribe","onAuthStateChanged","firebaseUser","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Global","createGlobalStyle","CreateUserInDb","LoginWorker","RegistrationWorker","AuthSaga","uid","docRef","doc","Timestamp","fromDate","Date","groups","right","wrong","call","setDoc","action","put","signInWithEmailAndPassword","FirebaseError","code","createUserWithEmailAndPassword","takeEvery","StatisticsWorker","StatisticsSaga","usersCollecitonRef","collection","getDocs","forEach","exists","push","message","getWordsByPageAndGroup","page","axios","get","calculateStatisticsScore","rightAnswersCount","groupCoefficient","GetWordsWorker","AnsweredWordsWorker","SkippedWordsWorker","UpdateUserWordsWorker","WordsSaga","maxPage","randomPage","Math","floor","random","select","response","shuffle","foundWord","find","successSound","rightAnswersAmount","wrongAnswersAmount","getDoc","docSnapshot","prevRightAnswersAmount","prevWrongAnswersAmount","merge","rootSaga","all","defaultState","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","midlewares","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8f0ad306.chunk.js","sourcesContent":["enum Languages {\n  ru = 'ru',\n  en = 'en',\n}\n\nexport default Languages;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Languages from '../constants/languages';\nimport en from './locales/en.json';\nimport ru from './locales/ru.json';\n\ni18n.use(initReactI18next).init({\n  resources: {\n    ru: { translation: ru },\n    en: { translation: en },\n  },\n  lng: Languages.ru,\n  fallbackLng: Languages.en,\n  interpolation: { escapeValue: false },\n});\n\nexport default i18n;\n","export enum MainRoutes {\n  Main = '/',\n  Start = '/start',\n  Login = '/login',\n  Register = '/registration',\n  Statistics = '/statistics',\n}\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore/';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const auth = getAuth(firebaseApp);\nexport const db = getFirestore(firebaseApp);\n","export enum MediaQueries {\n  DesktopLarge = '@media screen and (max-width: 1920px)',\n  Desktop = '@media screen and (max-width: 1440px)',\n  Laptop = '@media screen and (max-width: 1024px)',\n  Tablet = '@media screen and (max-width: 768px)',\n  Mobile = '@media screen and (max-width: 620px)',\n}\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../constants/mediaQueries';\n\nexport const AuthForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 60px;\n  margin-top: 30px;\n\n  ${MediaQueries.DesktopLarge} {\n    gap: 30px;\n    margin-top: 20px;\n  }\n  ${MediaQueries.Laptop} {\n    gap: 20px;\n  }\n`;\n","import { loginFail, loginStart, loginSuccess } from '../../actions/auth/login';\n\nexport enum LoginActionTypes {\n  LOGIN_INIT = 'LOGIN_INIT',\n  LOGIN_START = 'LOGIN_START',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  LOGIN_FAIL = 'LOGIN_FAIL',\n}\n\nexport type UserActionLoginTypes = ReturnType<\n  typeof loginStart | typeof loginSuccess | typeof loginFail\n>;\n\nexport type LoginValues = {\n  email: string;\n  password: string;\n};\n","import { User } from '@firebase/auth';\nimport { createAction } from '@reduxjs/toolkit';\nimport { LoginActionTypes } from '../../types/auth/login';\n\nexport const loginInit = createAction(\n  LoginActionTypes.LOGIN_INIT,\n  (values: { email: string; password: string }) => ({\n    payload: values,\n  }),\n);\n\nexport const loginStart = createAction(LoginActionTypes.LOGIN_START);\n\nexport const loginSuccess = createAction(\n  LoginActionTypes.LOGIN_SUCCESS,\n  (user: User | null) => ({\n    payload: user,\n  }),\n);\n\nexport const loginFail = createAction(\n  LoginActionTypes.LOGIN_FAIL,\n  (error: string) => ({\n    payload: error,\n  }),\n);\n","import {\n  registrationStart,\n  registrationSuccess,\n  registrationFail,\n  clearError,\n} from '../../actions/auth/registration';\n\nexport enum RegistrationActionTypes {\n  REGISTRATION_INIT = 'REGISTRATION_INIT',\n  REGISTRATION_START = 'REGISTRATION_START',\n  REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS',\n  REGISTRATION_FAIL = 'REGISTRATION_FAIL',\n  CLEAR_ERROR = 'CLEAR_ERROR',\n}\n\nexport type UserActionRegistrationTypes = ReturnType<\n  | typeof registrationStart\n  | typeof registrationSuccess\n  | typeof registrationFail\n  | typeof clearError\n>;\n\nexport type RegistrationValues = {\n  email: string;\n  password: string;\n  confirmPassword: string;\n};\n","export const regexp = {\n  regPasswordRules: /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/,\n  regMailRules: /^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i,\n};\n","import { regexp } from '../../core/constants/Regexp';\nimport { LoginValues } from '../../core/redux/types/auth/login';\nimport i18n from '../../core/i18n/i18n';\n\nexport type ErrorRegistrationValues = Partial<LoginValues>;\n\nexport const validate = (values: LoginValues): ErrorRegistrationValues => {\n  const errors: ErrorRegistrationValues = {};\n\n  if (!regexp.regMailRules.test(values.email)) {\n    errors.email = i18n.t('invalidEmail');\n  }\n\n  if (!regexp.regPasswordRules.test(values.password)) {\n    errors.password = i18n.t('invalidPassword');\n  }\n\n  return errors;\n};\n","import { Button as ButtonComponent } from '@mui/material';\nimport styled from 'styled-components';\nimport { MediaQueries } from '../../constants/mediaQueries';\n\nexport const Button = styled(ButtonComponent)`\n  &.MuiButton-root {\n    background-color: ${(props) => props.theme.palette.primary.main};\n    &:hover {\n      background-color: ${(props) => props.theme.palette.primary.mainDark};\n    }\n    color: ${(props) => props.theme.palette.text.secondary};\n    font-size: 2.5rem;\n    padding: 15px 20px;\n\n    ${MediaQueries.DesktopLarge} {\n      font-size: 1rem;\n      padding: 10px 15px;\n    }\n  }\n`;\n","import { TextField as TextFieldComponent } from '@mui/material';\nimport styled from 'styled-components';\nimport { MediaQueries } from '../../constants/mediaQueries';\n\nexport const TextFiled = styled(TextFieldComponent)`\n  & .MuiInputBase-root {\n    font-size: 3rem;\n  }\n  & .MuiInputLabel-root {\n    font-size: 2rem;\n  }\n  & .MuiFormHelperText-root {\n    font-size: 2rem;\n  }\n\n  ${MediaQueries.DesktopLarge} {\n    width: 400px;\n\n    & .MuiInputBase-root {\n      font-size: 1rem;\n    }\n    & .MuiInputLabel-root {\n      font-size: 1rem;\n    }\n    & .MuiFormHelperText-root {\n      font-size: 1rem;\n    }\n  }\n\n  ${MediaQueries.Mobile} {\n    width: 80%;\n\n    & .MuiInputBase-root {\n      font-size: 1.2rem;\n    }\n    & .MuiInputLabel-root {\n      font-size: 1rem;\n    }\n    & .MuiFormHelperText-root {\n      font-size: 1rem;\n    }\n  }\n`;\n","import { Link as LinkComponent } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { MediaQueries } from '../../../constants/mediaQueries';\n\nexport const Link = styled(LinkComponent)`\n  color: inherit;\n  font-size: 3rem;\n  ${MediaQueries.DesktopLarge} {\n    font-size: 1.5rem;\n  }\n`;\n","import { css } from 'styled-components';\n\nexport const FlexCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\nimport { FlexCenter } from '../../../styles/FlexCenter';\n\nexport const FlexContainer = styled.div`\n  ${FlexCenter}\n`;\n","import { Button } from '@mui/material';\nimport { Link } from './styled/Link';\nimport { FlexContainer } from './styled/FlexContainter';\nimport { FC } from 'react';\n\ninterface AuthLinkProps {\n  to: string;\n}\n\nexport const AuthLink: FC<AuthLinkProps> = ({ to, children }) => {\n  return (\n    <FlexContainer>\n      <Button>\n        <Link to={to}>{children}</Link>\n      </Button>\n    </FlexContainer>\n  );\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../redux/reducers';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { User } from '@firebase/auth';\nimport { RootState } from '../store';\n\nexport const selectUser = (state: RootState): User | null => state.auth.user;\n\nexport const selectUserError = (state: RootState): string | null =>\n  state.auth.error;\n\nexport const selectEmail = (state: RootState): string | null | undefined =>\n  state.auth.user?.email;\n","import { User } from '@firebase/auth';\nimport { createAction } from '@reduxjs/toolkit';\nimport { RegistrationActionTypes } from '../../types/auth/registration';\n\nexport const registrationInit = createAction(\n  RegistrationActionTypes.REGISTRATION_INIT,\n  (values: { email: string; password: string }) => ({\n    payload: values,\n  }),\n);\n\nexport const registrationStart = createAction(\n  RegistrationActionTypes.REGISTRATION_START,\n);\n\nexport const registrationSuccess = createAction(\n  RegistrationActionTypes.REGISTRATION_SUCCESS,\n  (user: User | null) => ({\n    payload: user,\n  }),\n);\n\nexport const registrationFail = createAction(\n  RegistrationActionTypes.REGISTRATION_FAIL,\n  (error: string) => ({\n    payload: error,\n  }),\n);\n\nexport const clearError = createAction(RegistrationActionTypes.CLEAR_ERROR);\n","import {\n  getWords,\n  getWordsSuccess,\n  getWordsFail,\n  checkWord,\n  addWordToAnswered,\n  setSkippedWords,\n  addToSkipped,\n  removeFromSkipped,\n  setGroup,\n  resetWords,\n  updateUserWords,\n} from '../../actions/words/words';\n\nexport enum WordsActionTypes {\n  GET_WORDS = 'GET_WORDS',\n  GET_WORDS_SUCCESS = 'GET_WORDS_SUCCESS',\n  GET_WORDS_FAIL = 'GET_WORDS_FAIL',\n  CHECK_WORD = 'CHECK_WORD',\n  ADD_WORD_TO_ANSWERED = 'ADD_WORD_TO_ANSWERED',\n  SET_SKIPPED_WORDS = 'SET_SKIPPED_WORDS',\n  ADD_TO_SKIPPED = 'ADD_TO_SKIPPED',\n  REMOVE_FROM_SKIPPED = 'REMOVE_FROM_SKIPPED',\n  SET_GROUP = 'SET_GROUP',\n  RESET_WORDS = 'RESET_WORDS',\n  UPDATE_USER_WORDS = 'UPDATE_USER_WORDS',\n}\n\nexport type WordAction = ReturnType<\n  | typeof getWords\n  | typeof getWordsSuccess\n  | typeof getWordsFail\n  | typeof checkWord\n  | typeof addWordToAnswered\n  | typeof setSkippedWords\n  | typeof addToSkipped\n  | typeof removeFromSkipped\n  | typeof setGroup\n  | typeof resetWords\n  | typeof updateUserWords\n>;\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../constants/mediaQueries';\n\nexport const AuthFormContainer = styled.div`\n  position: relative;\n  top: 120px;\n\n  ${MediaQueries.DesktopLarge} {\n    top: 40px;\n  }\n  ${MediaQueries.Desktop} {\n    top: 15%;\n  }\n  ${MediaQueries.Mobile} {\n    top: 10%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const AuthContainer = styled.div`\n  height: 100vh;\n`;\n","import { Typography } from '@mui/material';\nimport styled from 'styled-components';\nimport { MediaQueries } from '../../constants/mediaQueries';\n\nexport const Heading = styled(Typography)`\n  background-color: ${(props) => props.theme.palette.primary.main};\n  color: ${(props) => props.theme.palette.text.secondary};\n\n  box-shadow: 4px 4px 8px 0px\n    ${(props) => props.theme.palette.boxShadowColor.heading};\n\n  &.MuiTypography-root {\n    font-size: 4rem;\n    padding: 40px;\n    margin-bottom: 20px;\n\n    ${MediaQueries.DesktopLarge} {\n      font-size: 3rem;\n      padding: 20px;\n    }\n\n    ${MediaQueries.Mobile} {\n      font-size: 3rem;\n      padding: 20px;\n      margin-bottom: 10px;\n    }\n  }\n`;\n","import { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Heading } from '../Heading/Heading';\n\nexport const AuthHeader: FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Heading align=\"center\" variant=\"h2\">\n      {t('logoText')}\n    </Heading>\n  );\n};\n","import { Typography } from '@mui/material';\nimport styled from 'styled-components';\nimport { MediaQueries } from '../../constants/mediaQueries';\n\nexport const AuthHeaderInfo = styled(Typography)`\n  &.MuiTypography-root {\n    font-size: 4rem;\n  }\n  ${MediaQueries.DesktopLarge} {\n    &.MuiTypography-root {\n      font-size: 2rem;\n    }\n  }\n`;\n","import { FC } from 'react';\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { AuthForm } from '../../core/components/AuthForm/AuthForm';\nimport { loginInit } from '../../core/redux/actions/auth/login';\nimport { validate } from './validation';\nimport { Button } from '../../core/components/Button/Button';\nimport { TextFiled } from '../../core/components/TextField/TextField';\nimport { AuthLink } from '../../core/components/AuthLink/AuthLink';\nimport { MainRoutes } from '../../core/constants/MainRouters';\nimport { Alert } from '@mui/material';\nimport { useTypedSelector } from '../../core/hooks/typedReduxHooks';\nimport { selectUserError } from '../../core/redux/selectors/user';\nimport { clearError } from '../../core/redux/actions/auth/registration';\nimport { AuthFormContainer } from '../../core/components/AuthForm/AuthFormContainer';\nimport { AuthContainer } from '../../core/components/AuthForm/AuthContainer';\nimport { AuthHeader } from '../../core/components/AuthHeader/AuthHeader';\nimport { AuthHeaderInfo } from '../../core/components/AuthHeader/AuthHeaderInfo';\n\nexport const Login: FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const error = useTypedSelector(selectUserError);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    isInitialValid: false,\n    validate,\n    onSubmit: (values) => {\n      dispatch(loginInit(values));\n    },\n  });\n\n  const handleCloseError = () => {\n    dispatch(clearError());\n  };\n\n  return (\n    <AuthContainer>\n      <AuthHeader />\n      <AuthHeaderInfo align=\"center\" variant=\"h4\">\n        {t('login')}\n      </AuthHeaderInfo>\n      <AuthFormContainer>\n        <AuthLink to={MainRoutes.Register}>{t('toRegistrate')}</AuthLink>\n        <AuthForm onSubmit={formik.handleSubmit}>\n          <TextFiled\n            required\n            error={!!formik.errors?.email}\n            helperText={formik.errors?.email}\n            label={t('email')}\n            id=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          <TextFiled\n            required\n            error={!!formik.errors?.password}\n            helperText={formik.errors?.password}\n            label={t('password')}\n            id=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          {error && (\n            <Alert severity=\"error\" onClose={handleCloseError}>\n              {t(error)}\n            </Alert>\n          )}\n          <Button\n            disabled={!formik.isValid && !formik.isValidating}\n            size=\"large\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {t('submit')}\n          </Button>\n        </AuthForm>\n      </AuthFormContainer>\n    </AuthContainer>\n  );\n};\n","import { regexp } from '../../core/constants/Regexp';\nimport { RegistrationValues } from '../../core/redux/types/auth/registration';\nimport i18n from '../../core/i18n/i18n';\n\nexport type ErrorRegistrationValues = Partial<RegistrationValues>;\n\nexport const validate = (\n  values: RegistrationValues,\n): ErrorRegistrationValues => {\n  const errors: ErrorRegistrationValues = {};\n\n  if (!regexp.regMailRules.test(values.email)) {\n    errors.email = i18n.t('invalidEmail');\n  }\n\n  if (!regexp.regPasswordRules.test(values.password)) {\n    errors.password = i18n.t('invalidPassword');\n  }\n\n  if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = i18n.t('passwordsDoNotMatch');\n  }\n\n  return errors;\n};\n","import { FC } from 'react';\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { AuthForm } from '../../core/components/AuthForm/AuthForm';\nimport {\n  clearError,\n  registrationInit,\n} from '../../core/redux/actions/auth/registration';\nimport { validate } from './validation';\nimport { Button } from '../../core/components/Button/Button';\nimport { TextFiled } from '../../core/components/TextField/TextField';\nimport { AuthLink } from '../../core/components/AuthLink/AuthLink';\nimport { MainRoutes } from '../../core/constants/MainRouters';\nimport { useTypedSelector } from '../../core/hooks/typedReduxHooks';\nimport { selectUserError } from '../../core/redux/selectors/user';\nimport { Alert } from '@mui/material';\nimport { AuthContainer } from '../../core/components/AuthForm/AuthContainer';\nimport { AuthFormContainer } from '../../core/components/AuthForm/AuthFormContainer';\nimport { AuthHeader } from '../../core/components/AuthHeader/AuthHeader';\nimport { AuthHeaderInfo } from '../../core/components/AuthHeader/AuthHeaderInfo';\n\nexport const Registration: FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const error = useTypedSelector(selectUserError);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    isInitialValid: false,\n    validate,\n    onSubmit: (values) => {\n      const { email, password } = values;\n      const userData = { email, password };\n      dispatch(registrationInit(userData));\n    },\n  });\n\n  const handleCloseError = () => {\n    dispatch(clearError());\n  };\n\n  return (\n    <AuthContainer>\n      <AuthHeader />\n      <AuthHeaderInfo align=\"center\" variant=\"h4\">\n        {t('registration')}\n      </AuthHeaderInfo>\n      <AuthFormContainer>\n        <AuthLink to={MainRoutes.Login}>{t('toLogin')}</AuthLink>\n        <AuthForm onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\n          <TextFiled\n            required\n            error={!!formik.errors?.email}\n            helperText={formik.errors?.email}\n            label={t('email')}\n            id=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          <TextFiled\n            required\n            error={!!formik.errors?.password}\n            helperText={formik.errors?.password}\n            label={t('password')}\n            id=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          <TextFiled\n            required\n            error={!!formik.errors?.confirmPassword}\n            helperText={formik.errors?.confirmPassword}\n            label={t('confirmPassword')}\n            id=\"confirmPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.confirmPassword}\n          />\n          {error && (\n            <Alert severity=\"error\" onClose={handleCloseError}>\n              {t(error)}\n            </Alert>\n          )}\n          <Button\n            disabled={!formik.isValid && !formik.isValidating}\n            size=\"large\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            {t('submit')}\n          </Button>\n        </AuthForm>\n      </AuthFormContainer>\n    </AuthContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const StartHeader = styled.h2`\n  color: ${(props) => props.theme.palette.text.header};\n  text-align: center;\n  font-size: 4rem;\n  opacity: 0.8;\n  text-transform: uppercase;\n  letter-spacing: 13px;\n  font-weight: 300;\n\n  ${MediaQueries.DesktopLarge} {\n    font-size: 3rem;\n  }\n`;\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const StartText = styled.p`\n  max-width: 600px;\n  font-size: 2rem;\n  line-height: 1.4;\n  font-weight: 300;\n  color: ${(props) => props.theme.palette.text.secondary};\n  opacity: 0.8;\n  text-align: center;\n  padding: 15px;\n\n  ${MediaQueries.DesktopLarge} {\n    font-size: 1.5rem;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/bg-google-speech.54b27358.png\";","import styled from 'styled-components';\nimport bg from '../../../assets/bg-google-speech.png';\nimport { Button } from '../../../core/components/Button/Button';\n\nexport const StartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 60px;\n  background-image: url(${bg});\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100vh;\n\n  ${Button} {\n    width: 200px;\n    color: ${({ theme }) => theme.palette.primary.mainBackground};\n  }\n`;\n","import { FC } from 'react';\nimport { Button } from '../../core/components/Button/Button';\nimport { StartHeader } from './components/StartHeader';\nimport { StartText } from './components/StartText';\nimport { StartContainer } from './components/StartContainer';\nimport { Link } from '../../core/components/AuthLink/styled/Link';\nimport { MainRoutes } from '../../core/constants/MainRouters';\nimport { useTranslation } from 'react-i18next';\n\nexport const Start: FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <StartContainer>\n      <StartHeader>{t('logoText')}</StartHeader>\n      <StartText>{t('startText')}</StartText>\n      <Button>\n        <Link to={MainRoutes.Main}>{t('start')}</Link>\n      </Button>\n    </StartContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n\n  ${MediaQueries.Mobile} {\n    flex-direction: column;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 30px;\n\n  position: relative;\n  margin: 0 auto;\n  padding: 20px;\n`;\n","import { createAction } from '@reduxjs/toolkit';\nimport { WordsActionTypes } from '../../types/words/words';\nimport { Word } from '../../../interfaces/words';\n\nexport const getWords = createAction(WordsActionTypes.GET_WORDS);\n\nexport const getWordsSuccess = createAction(\n  WordsActionTypes.GET_WORDS_SUCCESS,\n  (words: Word[] | null) => ({\n    payload: words,\n  }),\n);\n\nexport const getWordsFail = createAction(\n  WordsActionTypes.GET_WORDS_FAIL,\n  (errorMessage: string) => ({\n    payload: errorMessage,\n  }),\n);\n\nexport const checkWord = createAction(\n  WordsActionTypes.CHECK_WORD,\n  (word: string) => ({ payload: word }),\n);\n\nexport const addWordToAnswered = createAction(\n  WordsActionTypes.ADD_WORD_TO_ANSWERED,\n  (id: string) => ({ payload: id }),\n);\n\nexport const setSkippedWords = createAction(\n  WordsActionTypes.SET_SKIPPED_WORDS,\n  (id: string, isSkipped: boolean) => ({\n    payload: { id, isSkipped },\n  }),\n);\n\nexport const addToSkipped = createAction(\n  WordsActionTypes.ADD_TO_SKIPPED,\n  (id: string) => ({\n    payload: id,\n  }),\n);\n\nexport const removeFromSkipped = createAction(\n  WordsActionTypes.REMOVE_FROM_SKIPPED,\n  (id: string) => ({\n    payload: id,\n  }),\n);\n\nexport const setGroup = createAction(\n  WordsActionTypes.SET_GROUP,\n  (group: number) => ({\n    payload: group,\n  }),\n);\n\nexport const resetWords = createAction(WordsActionTypes.RESET_WORDS);\n\nexport const updateUserWords = createAction(WordsActionTypes.UPDATE_USER_WORDS);\n","import { setUser } from '../../actions/auth/user';\n\nexport enum UserActionTypes {\n  SET_USER = 'SET_USER',\n}\n\nexport type UserAction = ReturnType<typeof setUser>;\n","export default __webpack_public_path__ + \"static/media/default.a98a9af5.jpg\";","export const url = {\n  WORDS: 'https://afternoon-falls-25894.herokuapp.com/words',\n  ASSETS:\n    'https://raw.githubusercontent.com/irinainina/rslang/rslang-data/data/',\n};\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const MainImg = styled.img`\n  border-radius: 10px;\n  box-shadow: 5px 5px 25px\n    ${({ theme }) => theme.palette.boxShadowColor.mainImg};\n\n  height: 450px;\n\n  ${MediaQueries.DesktopLarge} {\n    height: 230px;\n  }\n\n  ${MediaQueries.Mobile} {\n    width: 300px;\n    height: auto;\n  }\n`;\n","import { FC } from 'react';\nimport startImage from '../../../assets/default.jpg';\nimport { url } from '../../../core/constants/urls';\nimport { MainImg } from './MainImg';\n\ninterface ChosenImageProps {\n  imageUrl: string;\n}\n\nexport const ChosenImage: FC<ChosenImageProps> = ({ imageUrl }) => {\n  return (\n    <MainImg\n      src={!imageUrl ? startImage : `${url.ASSETS}${imageUrl}`}\n      alt=\"chosen word's image\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\ninterface WordContainerProps {\n  isAnswered: boolean | undefined;\n}\n\nexport const WordContainer = styled.div<WordContainerProps>`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  gap: 20px;\n\n  padding: 10px;\n  border: 1px solid ${(props) => props.theme.palette.border.wordContainer};\n  border-radius: 5px;\n  transition: 0.3s;\n\n  background-color: ${(props) =>\n    props.isAnswered\n      ? props.theme.palette.primary.backgroundLight\n      : props.theme.palette.primary.mainBackground};\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 2px 4px 0\n      ${(props) => props.theme.palette.boxShadowColor.word};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { Word } from '../interfaces/words';\n\nexport const getRandomPage = (maxPage: number): number =>\n  Math.floor(Math.random() * maxPage);\n\nexport const playAudio = (url: string): void => {\n  const audioComponent = new Audio();\n  audioComponent.src = url;\n  audioComponent.play();\n};\n\nexport const compareWords =\n  (wordToCheck: string | undefined) =>\n  (word: Word): boolean =>\n    word.word.toLowerCase() === wordToCheck?.toLowerCase();\n\nexport const getLastWordFromString = (words: string): string | undefined =>\n  words.split(' ').pop();\n","import { ChangeEvent, FC } from 'react';\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { WordContainer } from './WordContainer';\nimport { TextContainer } from './TextContainer';\nimport { url } from '../../constants/urls';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport { playAudio } from '../../helpers/words';\nimport { t } from 'i18next';\n\ninterface WordProps {\n  id?: string;\n  word: string;\n  transcription: string;\n  audio: string;\n  image?: string;\n  isAnswered?: boolean;\n  onImageChange?: (image: string) => void;\n  onSkipWord?: (id: string, e: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Word: FC<WordProps> = ({\n  id,\n  word,\n  transcription,\n  audio,\n  image,\n  onImageChange,\n  onSkipWord,\n  isAnswered,\n}) => {\n  const handleClick = () => {\n    playAudio(`${url.ASSETS}${audio}`);\n\n    if (onImageChange && image) {\n      onImageChange(image);\n    }\n  };\n\n  const handleSkipWord = (event: ChangeEvent<HTMLInputElement>) => {\n    if (onSkipWord && id) {\n      onSkipWord(id, event);\n    }\n  };\n\n  return (\n    <WordContainer onClick={handleClick} isAnswered={isAnswered}>\n      <VolumeUpIcon />\n      <TextContainer>\n        <Typography>{`${word} ${transcription}`}</Typography>\n        <FormControlLabel\n          label={t('skip') as string}\n          control={<Checkbox onChange={handleSkipWord} />}\n        />\n      </TextContainer>\n    </WordContainer>\n  );\n};\n","import { css } from 'styled-components';\n\nexport const AbsoluteCenter = css`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\nimport { TextContainer } from '../../../core/components/Word/TextContainer';\nimport { WordContainer } from '../../../core/components/Word/WordContainer';\nimport { AbsoluteCenter } from '../../../core/styles/AbsoluteCenter';\n\nexport const ModalContainer = styled.div`\n  ${AbsoluteCenter}\n  background-color: ${({ theme }) => theme.palette.primary.mainBackground};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n\n  border-radius: 20px;\n  width: 70%;\n  height: 70%;\n  padding: 60px;\n  & .MuiTypography-root {\n    font-size: 2rem;\n  }\n\n  ${MediaQueries.DesktopLarge} {\n    & .MuiTypography-root {\n      font-size: 1rem;\n    }\n  }\n\n  ${MediaQueries.Laptop} {\n    padding: 20px;\n    & .MuiTypography-root {\n      font-size: 0.8rem;\n    }\n  }\n\n  ${WordContainer} {\n    width: 500px;\n    justify-content: flex-start;\n    ${MediaQueries.DesktopLarge} {\n      width: 400px;\n    }\n    ${MediaQueries.Desktop} {\n      width: 100%;\n    }\n  }\n\n  ${TextContainer} {\n    flex-direction: row;\n    & .MuiFormControlLabel-root {\n      display: none;\n    }\n  }\n\n  ${MediaQueries.Mobile} {\n    padding: 10px 20px;\n    width: 90%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  overflow-y: scroll;\n`;\n","import { FC } from 'react';\nimport { Word } from '../../../core/components/Word/Word';\nimport { Modal, Typography } from '@mui/material';\nimport { Word as WordType } from '../../../core/interfaces/words';\nimport { ModalContainer } from './ModalContainer';\nimport { useTranslation } from 'react-i18next';\nimport { ModalContent } from './ModalContent';\nimport { Button } from '../../../core/components/Button/Button';\n\ninterface ResultsProps {\n  onClose: () => void;\n  isOpen: boolean;\n  words: WordType[] | null;\n  rightAnswers: string[];\n}\n\nexport const Results: FC<ResultsProps> = ({\n  onClose,\n  isOpen,\n  words,\n  rightAnswers,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal open={isOpen} onClose={onClose}>\n      <ModalContainer>\n        <ModalContent>\n          <Typography>{t('right')}</Typography>\n          {words &&\n            words\n              .filter(({ id }) => rightAnswers.includes(id))\n              .map(({ word, transcription, id, audio }) => (\n                <Word\n                  key={id}\n                  word={word}\n                  transcription={transcription}\n                  audio={audio}\n                />\n              ))}\n          <Typography>{t('wrong')}</Typography>\n          {words &&\n            words\n              .filter(({ id }) => !rightAnswers.includes(id))\n              .map(({ word, transcription, id, audio }) => (\n                <Word\n                  key={id}\n                  word={word}\n                  transcription={transcription}\n                  audio={audio}\n                />\n              ))}\n        </ModalContent>\n        <Button onClick={onClose}>{t('back')}</Button>\n      </ModalContainer>\n    </Modal>\n  );\n};\n","export const AMOUNT_OF_WORDS = 10;\nexport const MAX_PAGE = 29;\nexport const MAX_GROUP = 5;\n\nexport const groupCoefficients = [1, 1.1, 1.2, 1.3, 1.4, 1.5];\n","import { RootState } from '../reducers';\nimport { WordsState } from '../reducers/wordsReducer';\n\nexport const selectWords = (state: RootState): WordsState => state.words;\n\nexport const selectGroup = (state: RootState): number => state.words.group;\n","import styled from 'styled-components';\nimport { WordContainer } from '../../../core/components/Word/WordContainer';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const WordsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  & .MuiTypography-root {\n    font-size: 2rem;\n  }\n\n  ${WordContainer} {\n    width: 400px;\n\n    ${MediaQueries.DesktopLarge} {\n      width: 250px;\n\n      & .MuiTypography-root {\n        font-size: 1rem;\n      }\n    }\n\n    ${MediaQueries.Tablet} {\n      width: 200px;\n\n      & .MuiTypography-root {\n        font-size: 0.8rem;\n      }\n    }\n    ${MediaQueries.Mobile} {\n      width: 90%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const TranscriptContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid ${({ theme }) => theme.palette.border.wordContainer};\n  width: 400px;\n\n  & .MuiTypography-root {\n    font-size: 2rem;\n  }\n\n  ${MediaQueries.DesktopLarge} {\n    width: 300px;\n    & .MuiTypography-root {\n      font-size: 1.5rem;\n    }\n  }\n\n  ${MediaQueries.Tablet} {\n    width: 200px;\n    & .MuiTypography-root {\n      font-size: 1rem;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const Dropdown = styled.div`\n  display: flex;\n  gap: 15px;\n\n  & .MuiOutlinedInput-root {\n    font-size: 2rem;\n  }\n\n  ${MediaQueries.DesktopLarge} {\n    & .MuiOutlinedInput-root {\n      font-size: 1rem;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const MainHeader = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column-reverse;\n  gap: 20px;\n  position: absolute;\n  right: 20px;\n\n  ${MediaQueries.Laptop} {\n    position: static;\n  }\n`;\n","import styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const AccountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n\n  & .MuiTypography-root {\n    font-size: 2rem;\n  }\n\n  ${MediaQueries.DesktopLarge} {\n    & .MuiTypography-root {\n      font-size: 1rem;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { AbsoluteCenter } from '../../styles/AbsoluteCenter';\nimport { FlexCenter } from '../../styles/FlexCenter';\n\nexport const ModalContainer = styled.div`\n  ${AbsoluteCenter}\n  ${FlexCenter}\n  flex-direction: column;\n\n  background-color: ${({ theme }) => theme.palette.primary.mainBackground};\n  gap: 20px;\n  padding: 30px;\n  max-width: 50%;\n  max-height: 50%;\n  border-radius: 15px;\n`;\n","import { FC, useState } from 'react';\nimport { Modal, Typography } from '@mui/material';\nimport { Button } from '../../../core/components/Button/Button';\nimport { signOut } from 'firebase/auth';\nimport { auth } from '../../../core/firebase/';\nimport { useTypedSelector } from '../../../core/hooks/typedReduxHooks';\nimport { selectEmail } from '../../../core/redux/selectors/user';\nimport { useTranslation } from 'react-i18next';\nimport { AccountContainer } from './AccountContainer';\nimport { ModalContainer } from '../../../core/components/ComfirmModalContainer/ComfirmModalContainer';\nimport { ButtonContainer } from './ButtonContainer';\n\nexport const Account: FC = () => {\n  const { t } = useTranslation();\n  const email = useTypedSelector(selectEmail);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleLogout = () => {\n    signOut(auth);\n  };\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n\n  return (\n    <AccountContainer>\n      <Typography>{email}</Typography>\n      <Button onClick={handleOpenModal}>{t('logout')}</Button>\n      <Modal open={isModalOpen} onClose={handleCloseModal}>\n        <ModalContainer>\n          <Typography>{t('comfirmLogout')}</Typography>\n          <ButtonContainer>\n            <Button onClick={handleLogout}>{t('yes')}</Button>\n            <Button onClick={handleCloseModal}>{t('no')}</Button>\n          </ButtonContainer>\n        </ModalContainer>\n      </Modal>\n    </AccountContainer>\n  );\n};\n","import { MenuItem, Select, SelectChangeEvent } from '@mui/material';\nimport { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const LanguageSelector: FC = () => {\n  const { i18n } = useTranslation();\n  const { language: currentLanguage } = i18n;\n  const languages = Object.keys(i18n.services.resourceStore.data);\n\n  const handleChangeLanguage = (event: SelectChangeEvent) => {\n    const language = event.target.value;\n\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Select\n      onChange={handleChangeLanguage}\n      value={currentLanguage}\n      label=\"language\"\n    >\n      {languages.map((language) => (\n        <MenuItem value={language} key={language}>\n          {i18n.getFixedT(language)('language')}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Button } from '../../core/components/Button/Button';\nimport { ButtonContainer } from './components/ButtonContainer';\nimport { MainContainer } from './components/MainContainer';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { getWords } from '../../core/redux/actions/words/words';\nimport { ChosenImage } from './components/ChosenImage';\nimport { Word } from '../../core/components/Word/Word';\nimport { Results } from './components/Results';\nimport { CircularProgress, MenuItem, Select, Typography } from '@mui/material';\nimport { groupCoefficients } from '../../core/constants/app';\nimport { getLastWordFromString } from '../../core/helpers/words';\nimport { useSpeech } from '../../core/hooks/useSpeech';\nimport { useNavigate } from 'react-router-dom';\nimport { MainRoutes } from '../../core/constants/MainRouters';\nimport { WordsContainer } from './components/WordsContainer';\nimport MicIcon from '@mui/icons-material/Mic';\nimport { TranscriptContainer } from './components/TranscriptContainer';\nimport { Dropdown } from './components/Dropdown';\nimport { MainHeader } from './components/MainHeader';\nimport { Account } from './components/Account';\nimport { LanguageSelector } from '../../core/components/LanguageSelector/LanguageSelector';\n\nexport const Main: FC = () => {\n  const [chosenImg, setChosenImg] = useState('');\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {\n    transcript,\n    listening,\n    words,\n    answeredWords,\n    group,\n    isLoading,\n    resultsIsOpen,\n    handleStartListening,\n    handleReset,\n    handleClose,\n    handleSkipWord,\n    handleChangeCategory,\n  } = useSpeech();\n\n  useEffect(() => {\n    dispatch(getWords());\n  }, [dispatch, group]);\n\n  const handleRedirectToStatistics = () => {\n    navigate(MainRoutes.Statistics);\n  };\n\n  return (\n    <MainContainer>\n      <MainHeader>\n        <Dropdown>\n          <Select\n            onChange={handleChangeCategory}\n            defaultValue={'0'}\n            label=\"category\"\n          >\n            {groupCoefficients.map((coefficient, index) => (\n              <MenuItem value={index} key={coefficient}>{`category ${\n                Number(index) + 1\n              }`}</MenuItem>\n            ))}\n          </Select>\n          <LanguageSelector />\n        </Dropdown>\n        <Account />\n      </MainHeader>\n      <ChosenImage imageUrl={chosenImg} />\n      <TranscriptContainer>\n        <MicIcon color={listening ? 'success' : 'disabled'} fontSize=\"large\" />\n        <Typography>{getLastWordFromString(transcript)}</Typography>\n      </TranscriptContainer>\n      <WordsContainer>\n        {isLoading ? (\n          <CircularProgress size={100} />\n        ) : (\n          words &&\n          words.map(({ word, transcription, id, audio, image }) => (\n            <Word\n              key={id}\n              id={id}\n              word={word}\n              transcription={transcription}\n              audio={audio}\n              image={image}\n              onImageChange={setChosenImg}\n              onSkipWord={handleSkipWord}\n              isAnswered={answeredWords.includes(id)}\n            />\n          ))\n        )}\n      </WordsContainer>\n      <ButtonContainer>\n        <Button onClick={handleReset}>{t('restart')}</Button>\n        <Button onClick={handleStartListening}>{t('speakPlease')}</Button>\n        <Button onClick={handleRedirectToStatistics}>{t('results')}</Button>\n      </ButtonContainer>\n      <Results\n        onClose={handleClose}\n        isOpen={resultsIsOpen}\n        words={words}\n        rightAnswers={answeredWords}\n      />\n    </MainContainer>\n  );\n};\n","import { SelectChangeEvent } from '@mui/material';\nimport { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from 'react-speech-recognition';\nimport { UseSpeechReturn } from '../interfaces/speech';\nimport {\n  checkWord,\n  getWords,\n  resetWords,\n  setGroup,\n  setSkippedWords,\n  updateUserWords,\n} from '../redux/actions/words/words';\nimport { selectWords } from '../redux/selectors/words';\nimport { useTypedSelector } from './typedReduxHooks';\n\nexport const useSpeech = (): UseSpeechReturn => {\n  const dispatch = useDispatch();\n  const { transcript, listening, resetTranscript } = useSpeechRecognition();\n  const { words, answeredWords, skippedWords, group, isLoading } =\n    useTypedSelector(selectWords);\n  const [resultsIsOpen, setResultsIsOpen] = useState(false);\n\n  const handleStartListening = () => {\n    resetTranscript();\n    SpeechRecognition.startListening({ language: 'en-US', continuous: true });\n  };\n\n  const handleStopListening = useCallback(() => {\n    SpeechRecognition.stopListening();\n  }, []);\n\n  useEffect(() => {\n    dispatch(checkWord(transcript));\n  }, [dispatch, transcript]);\n\n  useEffect(() => {\n    if (words && answeredWords) {\n      const activeWords = skippedWords.length + answeredWords.length;\n      const isGameOver = activeWords === words.length;\n\n      if (isGameOver) {\n        dispatch(updateUserWords());\n        handleStopListening();\n        resetTranscript();\n        setResultsIsOpen(true);\n      }\n    }\n  }, [\n    answeredWords,\n    words,\n    skippedWords,\n    handleStopListening,\n    resetTranscript,\n    dispatch,\n  ]);\n\n  const handleReset = () => {\n    resetTranscript();\n    dispatch(resetWords());\n    dispatch(getWords());\n  };\n\n  const handleClose = () => {\n    setResultsIsOpen(false);\n    handleReset();\n  };\n\n  const handleSkipWord = (id: string, event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSkippedWords(id, event.target.checked));\n  };\n\n  const handleChangeCategory = (event: SelectChangeEvent) => {\n    dispatch(setGroup(Number(event.target.value)));\n  };\n\n  return {\n    transcript,\n    listening,\n    words,\n    answeredWords,\n    skippedWords,\n    group,\n    isLoading,\n    resultsIsOpen,\n    handleStartListening,\n    handleStopListening,\n    handleReset,\n    handleClose,\n    handleSkipWord,\n    handleChangeCategory,\n  };\n};\n","import { User } from '@firebase/auth';\nimport { createAction } from '@reduxjs/toolkit';\nimport { UserActionTypes } from '../../types/auth/user';\n\nexport const setUser = createAction(\n  UserActionTypes.SET_USER,\n  (user: User | null) => ({\n    payload: user,\n  }),\n);\n","import {\n  getUsersStatistics,\n  getUsersStatisticsFail,\n  getUsersStatisticsSuccess,\n} from '../../actions/statistics/statistics';\n\nexport enum StatisticsActionTypes {\n  GET_USERS_STATISTICS = 'GET_USERS_STATISTICS',\n  GET_USERS_STATISTICS_SUCCESS = 'GET_USERS_STATISTICS_SUCCESS',\n  GET_USERS_STATISTICS_FAIL = 'GET_USERS_STATISTICS_FAIL',\n}\n\nexport type StatisticsAction = ReturnType<\n  | typeof getUsersStatistics\n  | typeof getUsersStatisticsSuccess\n  | typeof getUsersStatisticsFail\n>;\n","export const theme = {\n  palette: {\n    primary: {\n      main: '#00c49d',\n      mainDark: '#00c2b2',\n      backgroundLight: '#dcfff8',\n      mainBackground: 'white',\n    },\n    text: {\n      main: '#000',\n      secondary: '#fff',\n      header: '#6cffde',\n    },\n    boxShadowColor: {\n      heading: 'rgba(34, 60, 80, 0.2)',\n      word: 'rgb(14 30 37 / 12%)',\n      mainImg: 'rgb(118 118 118 / 25%)',\n    },\n    border: {\n      wordContainer: 'lightgray',\n    },\n  },\n};\n","import { FC, ReactElement } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useTypedSelector } from '../../hooks/typedReduxHooks';\nimport { selectUser } from '../../redux/selectors/user';\n\ntype RequireAuthProps = {\n  redirectTo: string;\n  forAuth?: boolean;\n};\n\nexport const RequireAuth: FC<RequireAuthProps> = ({\n  redirectTo,\n  children,\n  forAuth = false,\n}) => {\n  const user = useTypedSelector(selectUser);\n\n  if (forAuth) {\n    return user ? <Navigate to={redirectTo} /> : (children as ReactElement);\n  }\n\n  return user ? (children as ReactElement) : <Navigate to={redirectTo} />;\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport { UserData } from '../../../interfaces/db';\nimport { StatisticsActionTypes } from '../../types/statistics/statistics';\n\nexport const getUsersStatistics = createAction(\n  StatisticsActionTypes.GET_USERS_STATISTICS,\n);\n\nexport const getUsersStatisticsSuccess = createAction(\n  StatisticsActionTypes.GET_USERS_STATISTICS_SUCCESS,\n  (users: UserData[] | null) => ({\n    payload: {\n      users,\n    },\n  }),\n);\n\nexport const getUsersStatisticsFail = createAction(\n  StatisticsActionTypes.GET_USERS_STATISTICS_FAIL,\n  (error: string) => ({\n    payload: {\n      error,\n    },\n  }),\n);\n","import { UserData } from '../../interfaces/db';\nimport { RootState } from '../reducers';\n\nexport const selectUsersStatistics = (state: RootState): UserData[] | null =>\n  state.statistics.users;\n","import { Timestamp } from 'firebase/firestore';\nimport { UserData } from '../interfaces/db';\nimport { OrderType } from '../interfaces/statistics';\n\nexport const formatDateFromTimestamp = (timestamp: Timestamp): string => {\n  const date = timestamp.toDate();\n  const formatedDate = date.toLocaleDateString().replaceAll('.', '/');\n  const formatedTime = date.toLocaleTimeString();\n  return `${formatedDate}, ${formatedTime}`;\n};\n\nfunction descSorting(a: UserData, b: UserData, orderBy: keyof UserData) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function sortUserData(\n  order: OrderType,\n  orderBy: keyof UserData,\n): (a: UserData, b: UserData) => number {\n  return order === 'desc'\n    ? (a: UserData, b: UserData) => descSorting(a, b, orderBy)\n    : (a: UserData, b: UserData) => -descSorting(a, b, orderBy);\n}\n","import { TableBody, TableCell, TableRow } from '@mui/material';\nimport {\n  formatDateFromTimestamp,\n  sortUserData,\n} from '../../../core/helpers/statistics';\nimport { UserData } from '../../../core/interfaces/db';\nimport { OrderType } from '../../../core/interfaces/statistics';\nimport { FC } from 'react';\n\ninterface StatisticsTableBodyProps {\n  usersStatistics: UserData[] | null;\n  order: OrderType;\n  orderBy: keyof UserData;\n}\n\nexport const StatisticsTableBody: FC<StatisticsTableBodyProps> = ({\n  usersStatistics,\n  order,\n  orderBy,\n}) => {\n  return (\n    <TableBody>\n      {usersStatistics &&\n        usersStatistics\n          .slice()\n          .sort(sortUserData(order, orderBy))\n          .map((user, index) => (\n            <TableRow key={user.id}>\n              <TableCell align=\"center\">{index + 1}</TableCell>\n              <TableCell align=\"center\">{user.email}</TableCell>\n              <TableCell align=\"center\">\n                {formatDateFromTimestamp(user.date)}\n              </TableCell>\n              <TableCell align=\"center\">{user.score}</TableCell>\n            </TableRow>\n          ))}\n    </TableBody>\n  );\n};\n","export enum DbCollections {\n  users = 'users',\n}\n","import { Paper } from '@mui/material';\nimport styled from 'styled-components';\nimport { MediaQueries } from '../../../core/constants/mediaQueries';\n\nexport const Container = styled(Paper)`\n  max-height: calc(100vh - 100px);\n\n  & .MuiTable-root {\n    height: 'max-content';\n  }\n\n  & .MuiTableCell-head {\n    background-color: ${({ theme }) => theme.palette.primary.backgroundLight};\n  }\n  & .MuiTable-root {\n    background-color: ${({ theme }) => theme.palette.primary.mainBackground};\n  }\n\n  & .MuiTableCell-root {\n    font-size: 2rem;\n    ${MediaQueries.DesktopLarge} {\n      font-size: 1.5rem;\n    }\n    ${MediaQueries.Tablet} {\n      font-size: 1rem;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StatisticsContainer = styled.div`\n  margin: 20px auto;\n  width: 90%;\n`;\n","import { FC, useEffect, useState } from 'react';\nimport {\n  Table,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableContainer,\n  TableSortLabel,\n} from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { getUsersStatistics } from '../../core/redux/actions/statistics/statistics';\nimport { useTypedSelector } from '../../core/hooks/typedReduxHooks';\nimport { selectUsersStatistics } from '../../core/redux/selectors/statistics';\n\nimport { UserData } from '../../core/interfaces/db';\nimport { useTranslation } from 'react-i18next';\nimport { OrderType } from '../../core/interfaces/statistics';\nimport { StatisticsTableBody } from './components/StatisticsTableBody';\nimport { Container } from './components/Container';\nimport { AuthLink } from '../../core/components/AuthLink/AuthLink';\nimport { MainRoutes } from '../../core/constants/MainRouters';\nimport { StatisticsContainer } from './components/StatisticsContainer';\n\nexport const Statistics: FC = () => {\n  const dispatch = useDispatch();\n  const usersStatistics = useTypedSelector(selectUsersStatistics);\n  const { t } = useTranslation();\n\n  const [order, setOrder] = useState<OrderType>('asc');\n  const [orderBy, setOrderBy] = useState<keyof UserData>('score');\n\n  const handleRequestSort = (property: keyof UserData) => () => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  useEffect(() => {\n    dispatch(getUsersStatistics());\n  }, [dispatch]);\n\n  const headerCells = [\n    {\n      id: '',\n      label: '№',\n    },\n    {\n      id: 'email',\n      label: t('email'),\n    },\n    {\n      id: 'date',\n      label: t('date'),\n    },\n    {\n      id: 'score',\n      label: t('score'),\n    },\n  ];\n\n  const sortableHeaderCells = headerCells.slice(1);\n\n  return (\n    <StatisticsContainer>\n      <AuthLink to={MainRoutes.Main}>{t('back')}</AuthLink>\n      <TableContainer component={Container}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">{headerCells[0].label}</TableCell>\n              {sortableHeaderCells.map(({ id, label }) => (\n                <TableCell\n                  key={id}\n                  align=\"center\"\n                  sortDirection={orderBy === id ? order : false}\n                >\n                  <TableSortLabel\n                    active={orderBy === id}\n                    direction={orderBy === id ? order : 'asc'}\n                    onClick={handleRequestSort(id as keyof UserData)}\n                  >\n                    {label}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <StatisticsTableBody\n            usersStatistics={usersStatistics}\n            order={order}\n            orderBy={orderBy}\n          />\n        </Table>\n      </TableContainer>\n    </StatisticsContainer>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { auth } from './core/firebase';\nimport { MainRoutes } from './core/constants/MainRouters';\nimport { Login } from './pages/Login/Login';\nimport { Registration } from './pages/Registration/Registration';\nimport { Start } from './pages/Start/Start';\nimport { Main } from './pages/Main/Main';\nimport { setUser } from './core/redux/actions/auth/user';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './core/theme';\nimport { useDispatch } from 'react-redux';\nimport { RequireAuth } from './core/components/RequireAuth/RequireAuth';\nimport { Statistics } from './pages/Statistics/Statistics';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\n      if (firebaseUser) {\n        dispatch(setUser(firebaseUser));\n      } else {\n        dispatch(setUser(null));\n      }\n    });\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Routes>\n        <Route\n          path={MainRoutes.Register}\n          element={\n            <RequireAuth redirectTo={MainRoutes.Start} forAuth>\n              <Registration />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path={MainRoutes.Login}\n          element={\n            <RequireAuth redirectTo={MainRoutes.Start} forAuth>\n              <Login />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path={MainRoutes.Main}\n          element={\n            <RequireAuth redirectTo={MainRoutes.Login}>\n              <Main />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path={MainRoutes.Start}\n          element={\n            <RequireAuth redirectTo={MainRoutes.Login}>\n              <Start />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path={MainRoutes.Statistics}\n          element={\n            <RequireAuth redirectTo={MainRoutes.Login}>\n              <Statistics />\n            </RequireAuth>\n          }\n        />\n      </Routes>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nconst Global = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box; \n  font-family: Roboto;\n}\na { \n  text-decoration: none;\n}\n`;\n\nexport default Global;\n","import { takeEvery, put, call } from 'redux-saga/effects';\nimport {\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\nimport {\n  loginInit,\n  loginStart,\n  loginSuccess,\n  loginFail,\n} from '../actions/auth/login';\nimport { auth, db } from '../../firebase';\nimport {\n  registrationFail,\n  registrationInit,\n  registrationSuccess,\n} from '../actions/auth/registration';\nimport { FirebaseError } from 'firebase/app';\nimport { doc, setDoc, Timestamp } from 'firebase/firestore';\nimport { User } from '@firebase/auth';\nimport { groupCoefficients } from '../../constants/app';\nimport { UserData } from '../../interfaces/db';\nimport { DbCollections } from '../../constants/db';\n\nfunction* CreateUserInDb(user: User) {\n  const { uid, email } = user;\n  const docRef = doc(db, DbCollections.users, uid);\n\n  const data: UserData = {\n    id: uid,\n    email: email ? email : '',\n    date: Timestamp.fromDate(new Date()),\n    score: 0,\n    groups: groupCoefficients.map(() => ({\n      right: 0,\n      wrong: 0,\n    })),\n  };\n\n  yield call(<never>setDoc, docRef, data);\n}\n\nfunction* LoginWorker(action: ReturnType<typeof loginInit>) {\n  try {\n    const { email, password } = action.payload;\n    yield put(loginStart());\n\n    const { user } = yield call(\n      signInWithEmailAndPassword,\n      auth,\n      email,\n      password,\n    );\n\n    yield put(loginSuccess(user));\n  } catch (error: FirebaseError | unknown) {\n    if (error instanceof FirebaseError) {\n      yield put(loginFail(error.code));\n    }\n  }\n}\n\nfunction* RegistrationWorker(action: ReturnType<typeof registrationInit>) {\n  try {\n    const { email, password } = action.payload;\n    yield put(loginStart());\n\n    const { user } = yield call(\n      createUserWithEmailAndPassword,\n      auth,\n      email,\n      password,\n    );\n\n    yield call(CreateUserInDb, user);\n    yield put(registrationSuccess(user));\n  } catch (error: FirebaseError | unknown) {\n    if (error instanceof FirebaseError) {\n      yield put(registrationFail(error.code));\n    }\n  }\n}\n\nexport function* AuthSaga(): Generator {\n  yield takeEvery(loginInit, LoginWorker);\n  yield takeEvery(registrationInit, RegistrationWorker);\n}\n","import {\n  collection,\n  getDocs,\n  QueryDocumentSnapshot,\n  QuerySnapshot,\n} from 'firebase/firestore';\nimport { takeEvery, StrictEffect, call, put } from 'redux-saga/effects';\nimport { DbCollections } from '../../constants/db';\nimport { db } from '../../firebase';\nimport { UserData } from '../../interfaces/db';\nimport {\n  getUsersStatistics,\n  getUsersStatisticsFail,\n  getUsersStatisticsSuccess,\n} from '../actions/statistics/statistics';\n\nfunction* StatisticsWorker(): Generator<StrictEffect, void, QuerySnapshot> {\n  try {\n    const users: UserData[] = [];\n    const usersCollecitonRef = collection(db, DbCollections.users);\n\n    const usersSnapshot: QuerySnapshot = (yield call(\n      getDocs,\n      usersCollecitonRef,\n    )) as QuerySnapshot;\n\n    usersSnapshot.forEach((doc: QueryDocumentSnapshot) => {\n      if (doc.exists()) {\n        users.push(doc.data() as UserData);\n      }\n    });\n\n    yield put(getUsersStatisticsSuccess(users));\n  } catch (error) {\n    yield put(getUsersStatisticsFail((error as Error).message));\n  }\n}\n\nexport function* StatisticsSaga(): Generator {\n  yield takeEvery(getUsersStatistics, StatisticsWorker);\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { url } from '../constants/urls';\nimport { Word } from '../interfaces/words';\n\nexport const getWordsByPageAndGroup = async (\n  page = 0,\n  group = 0,\n): Promise<AxiosResponse<Word[]>> => {\n  return axios.get(`${url.WORDS}?page=${page}&group=${group}`);\n};\n\nexport const calculateStatisticsScore = (\n  score: number,\n  rightAnswersCount: number,\n  groupCoefficient: number,\n): number => {\n  return score + rightAnswersCount * groupCoefficient;\n};\n","export default __webpack_public_path__ + \"static/media/success-sound.574f8a06.mp3\";","import { call, put, select, StrictEffect, takeEvery } from 'redux-saga/effects';\nimport { calculateStatisticsScore, getWordsByPageAndGroup } from '../../api';\nimport shuffle from 'lodash.shuffle';\nimport {\n  getWords,\n  getWordsFail,\n  getWordsSuccess,\n  checkWord,\n  addWordToAnswered,\n  setSkippedWords,\n  addToSkipped,\n  removeFromSkipped,\n  updateUserWords,\n} from '../actions/words/words';\nimport { Word } from '../../interfaces/words';\nimport { AxiosResponse } from 'axios';\nimport {\n  AMOUNT_OF_WORDS,\n  MAX_PAGE,\n  groupCoefficients,\n} from '../../constants/app';\nimport { selectGroup, selectWords } from '../selectors/words';\nimport {\n  compareWords,\n  getLastWordFromString,\n  getRandomPage,\n  playAudio,\n} from '../../helpers/words';\nimport { db } from '../../firebase';\nimport {\n  doc,\n  getDoc,\n  setDoc,\n  DocumentSnapshot,\n  Timestamp,\n} from 'firebase/firestore';\nimport { selectUser } from '../selectors/user';\nimport { DbCollections } from '../../constants/db';\nimport { UserData } from '../../interfaces/db';\nimport successSound from '../../../assets/success-sound.mp3';\n\nfunction* GetWordsWorker(): Generator<\n  StrictEffect,\n  void,\n  AxiosResponse<Word[]> | number\n> {\n  try {\n    const randomPage = getRandomPage(MAX_PAGE);\n    const group = (yield select(selectGroup)) as number;\n    const response: AxiosResponse<Word[]> = (yield call(\n      getWordsByPageAndGroup,\n      randomPage,\n      group,\n    )) as AxiosResponse<Word[]>;\n    const words = shuffle(response.data).slice(0, AMOUNT_OF_WORDS);\n\n    yield put(getWordsSuccess(words));\n  } catch (error) {\n    yield put(getWordsFail((error as Error).message));\n  }\n}\n\nfunction* AnsweredWordsWorker(\n  action: ReturnType<typeof checkWord>,\n): Generator<StrictEffect, void, ReturnType<typeof selectWords>> {\n  const { words, answeredWords, skippedWords }: ReturnType<typeof selectWords> =\n    (yield select(selectWords)) as ReturnType<typeof selectWords>;\n  const wordToCheck = getLastWordFromString(action.payload);\n  const foundWord = words?.find(compareWords(wordToCheck));\n\n  if (\n    foundWord &&\n    !answeredWords.includes(foundWord.id) &&\n    !skippedWords.includes(foundWord.id)\n  ) {\n    yield put(addWordToAnswered(foundWord.id));\n    playAudio(successSound);\n  }\n}\n\nfunction* SkippedWordsWorker(\n  action: ReturnType<typeof setSkippedWords>,\n): Generator {\n  const { id, isSkipped } = action.payload;\n  if (isSkipped) yield put(addToSkipped(id));\n  else yield put(removeFromSkipped(id));\n}\n\nfunction* UpdateUserWordsWorker(): Generator<\n  StrictEffect,\n  void,\n  | ReturnType<typeof selectWords>\n  | ReturnType<typeof selectUser>\n  | DocumentSnapshot\n> {\n  const { answeredWords, skippedWords, group }: ReturnType<typeof selectWords> =\n    (yield select(selectWords)) as ReturnType<typeof selectWords>;\n\n  const user = (yield select(selectUser)) as ReturnType<typeof selectUser>;\n  if (!user) return;\n\n  const rightAnswersAmount = answeredWords.length;\n  const wrongAnswersAmount = skippedWords.length;\n\n  const docRef = doc(db, DbCollections.users, user.uid);\n  const docSnapshot = (yield call(getDoc, docRef)) as DocumentSnapshot;\n\n  if (docSnapshot.exists()) {\n    const data = docSnapshot.data() as UserData;\n\n    const score = data.score;\n    const prevRightAnswersAmount = data.groups[group].right;\n    const prevWrongAnswersAmount = data.groups[group].wrong;\n\n    data.groups[group].right = rightAnswersAmount + prevRightAnswersAmount;\n    data.groups[group].wrong = wrongAnswersAmount + prevWrongAnswersAmount;\n    data.date = Timestamp.fromDate(new Date());\n    data.score = calculateStatisticsScore(\n      score,\n      rightAnswersAmount,\n      groupCoefficients[group],\n    );\n\n    yield call(setDoc, docRef, data, { merge: true });\n  }\n}\n\nexport function* WordsSaga(): Generator {\n  yield takeEvery(getWords, GetWordsWorker);\n  yield takeEvery(checkWord, AnsweredWordsWorker);\n  yield takeEvery(setSkippedWords, SkippedWordsWorker);\n  yield takeEvery(updateUserWords, UpdateUserWordsWorker);\n}\n","import { all } from 'redux-saga/effects';\nimport { AuthSaga } from './authSaga';\nimport { StatisticsSaga } from './statisticsSaga';\nimport { WordsSaga } from './wordsSaga';\n\nexport function* rootSaga(): Generator {\n  yield all([AuthSaga(), WordsSaga(), StatisticsSaga()]);\n}\n","import { User } from '@firebase/auth';\nimport { UserAction, UserActionTypes } from '../types/auth/user';\nimport {\n  RegistrationActionTypes,\n  UserActionRegistrationTypes,\n} from '../types/auth/registration';\nimport { UserActionLoginTypes, LoginActionTypes } from '../types/auth/login';\n\ninterface UserState {\n  user: User | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst defaultState: UserState = {\n  user: null,\n  isLoading: false,\n  error: null,\n};\n\nexport type AuthActions =\n  | UserAction\n  | UserActionRegistrationTypes\n  | UserActionLoginTypes;\n\nexport const authReducer = (\n  // eslint-disable-next-line @typescript-eslint/default-param-last\n  state = defaultState,\n  action: AuthActions,\n): UserState => {\n  switch (action.type) {\n    case RegistrationActionTypes.REGISTRATION_START:\n    case LoginActionTypes.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case UserActionTypes.SET_USER:\n    case RegistrationActionTypes.REGISTRATION_SUCCESS:\n    case LoginActionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        user: action.payload,\n      };\n    case RegistrationActionTypes.REGISTRATION_FAIL:\n    case LoginActionTypes.LOGIN_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    case RegistrationActionTypes.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { UserData } from '../../interfaces/db';\nimport {\n  StatisticsAction,\n  StatisticsActionTypes,\n} from '../types/statistics/statistics';\n\ninterface StatisticsState {\n  users: UserData[] | null;\n  error: string | null;\n  isLoading: boolean;\n}\n\nconst defaultState: StatisticsState = {\n  users: null,\n  error: null,\n  isLoading: false,\n};\n\nexport const statisticsReducer = (\n  // eslint-disable-next-line @typescript-eslint/default-param-last\n  state = defaultState,\n  action: StatisticsAction,\n): StatisticsState => {\n  switch (action.type) {\n    case StatisticsActionTypes.GET_USERS_STATISTICS:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n\n    case StatisticsActionTypes.GET_USERS_STATISTICS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        users: action.payload.users,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { WordAction, WordsActionTypes } from '../types/words/words';\nimport { Word } from '../../interfaces/words';\n\nexport interface WordsState {\n  words: Word[] | null;\n  isLoading: boolean;\n  error: string | null;\n  answeredWords: string[];\n  skippedWords: string[];\n  group: number;\n}\n\nconst defaultState: WordsState = {\n  words: null,\n  isLoading: false,\n  error: null,\n  answeredWords: [],\n  skippedWords: [],\n  group: 0,\n};\n\nexport type WordsActions = WordAction;\n\nexport const wordsReducer = (\n  // eslint-disable-next-line @typescript-eslint/default-param-last\n  state = defaultState,\n  action: WordsActions,\n): WordsState => {\n  switch (action.type) {\n    case WordsActionTypes.GET_WORDS:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case WordsActionTypes.GET_WORDS_SUCCESS:\n      return {\n        ...state,\n        words: action.payload,\n        isLoading: false,\n        error: null,\n      };\n    case WordsActionTypes.GET_WORDS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    case WordsActionTypes.ADD_WORD_TO_ANSWERED:\n      return {\n        ...state,\n        answeredWords: [...state.answeredWords, action.payload],\n      };\n    case WordsActionTypes.ADD_TO_SKIPPED:\n      return {\n        ...state,\n        skippedWords: [...state.skippedWords, action.payload],\n      };\n    case WordsActionTypes.REMOVE_FROM_SKIPPED:\n      return {\n        ...state,\n        skippedWords: state.skippedWords.filter((id) => id !== action.payload),\n      };\n    case WordsActionTypes.SET_GROUP:\n      return {\n        ...state,\n        group: action.payload,\n      };\n    case WordsActionTypes.RESET_WORDS:\n      return {\n        ...state,\n        words: null,\n        answeredWords: [],\n        skippedWords: [],\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { statisticsReducer } from './statisticsReducer';\nimport { wordsReducer } from './wordsReducer';\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  words: wordsReducer,\n  statistics: statisticsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import createSagaMiddleware from '@redux-saga/core';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { rootSaga } from './sagas';\nimport { rootReducer } from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst midlewares = [sagaMiddleware];\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...midlewares)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport './core/i18n/i18n';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStyled from './core/styles/globalStyled';\nimport { Provider } from 'react-redux';\nimport { store } from './core/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyled />\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}